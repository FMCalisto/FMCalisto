name: Update README

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JQ
        run: sudo apt-get install -y jq

      - name: Fetch and Update Commit Count
        env:
          UPDATE_README: ${{ secrets.UPDATE_README }}
        run: |
          total_commits=0
          page=1
          max_pages=5000  # Limit to avoid infinite loops
          commits_per_repo=1000  # Limit number of commits to fetch per repository
          repo_limit=50  # Process a limited number of repos per run

          while [ $page -le $max_pages ]; do
            echo "Fetching repos for page $page"

            # Fetch repositories
            repos=$(curl -s -H "Authorization: token $UPDATE_README" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/user/repos?per_page=100&page=$page")
            repos=$(echo "$repos" | jq -r '.[].full_name // empty')
            echo "Repositories fetched: $repos"

            if [ -z "$repos" ]; then
              echo "No more repositories found on page $page"
              break
            fi

            repo_count=0
            for repo in $repos; do
              repo_count=$((repo_count + 1))
              if [ $repo_count -gt $repo_limit ]; then
                echo "Repo limit reached. Stopping."
                break
              fi

              echo "Processing repo: $repo"
              repo_commits=0
              commit_page=1

              while [ $commit_page -le 10 ]; do  # Limiting to first 10 pages per repo
                echo "Fetching commits for repo $repo, page $commit_page"

                commits=$(curl -s -H "Authorization: token $UPDATE_README" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/$repo/commits?per_page=100&page=$commit_page")
                commit_count=$(echo "$commits" | jq '. | length')

                if [ "$commit_count" -eq 0 ]; then
                  echo "No more commits found on page $commit_page for repo $repo"
                  break
                fi

                echo "Found $commit_count commits on page $commit_page for repo $repo"
                repo_commits=$((repo_commits + commit_count))
                commit_page=$((commit_page + 1))

                # Stop fetching commits if the limit is reached
                if [ $repo_commits -ge $commits_per_repo ]; then
                  echo "Commit limit reached for repo $repo"
                  break
                fi
              done

              echo "Total commits for repo $repo: $repo_commits"
              total_commits=$((total_commits + repo_commits))
            done

            page=$((page + 1))

            # Stop if repo limit is reached
            if [ $repo_count -ge $repo_limit ]; then
              echo "Repo limit reached. Stopping."
              break
            fi
          done

          echo "Total commits across all repos: $total_commits"

          # Update README with total commits if it has changed
          current_commits=$(grep -o "Total Commits: [0-9,]*" README.md | grep -o "[0-9,]*")
          if [ "$current_commits" != "$total_commits" ]; then
            echo "Updating README.md with new total commits"
            if grep -q "Total Commits: [0-9,]*" README.md; then
              sed -i "s/Total Commits: [0-9,]*/Total Commits: ${total_commits}/" README.md
            else
              echo "Total Commits: ${total_commits}" >> README.md
            fi
          else
            echo "No change in total commits, skipping update."
          fi

      - name: Commit changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add README.md
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update total commits in README"
            git push
          else
            echo "No changes to commit"
          fi
